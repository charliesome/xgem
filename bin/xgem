#!/usr/bin/env ruby

xgem_root = File.expand_path("#{File.expand_path(__FILE__)}/../..")

commands = {
  "refresh" => -> {
    require "rubygems"
    require "fileutils"
    
    puts "Refreshing xgem cache..."
    total = Gem::Specification.count
    current = 0
    suffixes = Gem.suffixes.map { |s| Regexp.new("#{Regexp.escape s}\\z") }
    require_map = {}
    executables = {}
    
    print "0/#{total}"
    
    Gem::Specification.each do |spec|
      spec.require_paths.each do |require_path|
        root = "#{spec.full_gem_path}/#{require_path}/"
        Dir["#{root}**/*"].each do |file|
          if File.file? file
            suffixes.each do |suffix|
              if file =~ suffix
                require_map[file[root.size..-1].gsub(suffix, "")] = file.gsub(suffix, "")
              end
            end
          end
        end
      end
      spec.executables.each do |executable|
        if File.file? "#{spec.bin_dir}/#{executable}"
          executables[executable] = "#{spec.bin_dir}/#{executable}"
        end
      end
      print "\r#{current += 1}/#{total}"
    end
    
    File.write "#{xgem_root}/data/require_paths", Marshal.dump(require_map)
    File.write "#{xgem_root}/data/executables", Marshal.dump(executables)
    puts "\rReady to rock and roll!"
  },
  
  "install" => -> {
    print "Installing xgem-ruby executable... "
    
    # overwrite RubyGem's wrapper with a shell script
    wrapper_script = <<-XGEMRUBY.gsub(/^      /,"")
      #!/bin/bash

      xgem_root="#{__FILE__.inspect[1...-1]}/../.."

      ruby --disable-gems -I "$xgem_root/lib" -r xgem $@
    XGEMRUBY
    File.write "#{$0}-ruby", wrapper_script
    File.write "#{File.expand_path __FILE__}-ruby", wrapper_script
    
    puts "ok!"
    
    print "Making 'xgem' use 'xgem-ruby'... "
    
    File.write "#{$0}", <<-XGEM.gsub(/^      /,"")
      #!/bin/bash
      
      ruby --disable-gems #{File.expand_path(__FILE__).inspect} $@
    XGEM
    
    puts "ok!"
    
    commands["refresh"].call
  },
  
  "do" => ->(executable, *args) {
    executables = Marshal.load File.open("#{xgem_root}/data/executables", "rb") { |f| f.read }
    if executables[executable]
      exec "#{$0}-ruby", executables[executable], *args
    else
      puts "Unknown executable '#{executable}'. Perhaps try running 'xgem refresh'?"
      exit 1
    end
  }
}

cmd, *cmd_args = ARGV
if commands[cmd] and commands[cmd].parameters.take_while { |x,_| x == :req }.count <= cmd_args.count
  commands[cmd].call *cmd_args
else
  puts <<-USAGE.gsub(/^  /,"")
  Usage: xgem <command> [<args>...]
  
  Available commands are:
  
    refresh   - Scans all installed gems and adds them to the require path
                cache. You will need to run 'xgem refresh' every time you 
                install or uninstall a gem.
              
    install   - You must run 'xgem install' when you first install xgem in
                order to use the 'xgem-ruby' command. Note that this will not
                modify your system in any way that isn't undoable by running
                'gem uninstall xgem'.
    
    do        - Runs an executable provided by a gem. For example
                'xgem do rails server'
  
  USAGE
end